{
  "openapi": "3.0.1",
  "info": {
    "title": "StackFood.API",
    "version": "1.0"
  },
  "paths": {
    "/api/customers": {
      "post": {
        "tags": ["Customer"],
        "summary": "Creates a new customer in the database.",
        "requestBody": {
          "description": "The customer data (name, email, and CPF).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/customers/{cpf}": {
      "get": {
        "tags": ["Customer"],
        "summary": "Get a customer by CPF.",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/order": {
      "get": {
        "tags": ["Order"],
        "summary": "Retrieves a list of all orders, optionally filtered by status.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Optional filter for order status.",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": ["Order"],
        "summary": "Creates a new order with the provided information.",
        "requestBody": {
          "description": "The request body containing order details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/order/{id}": {
      "get": {
        "tags": ["Order"],
        "summary": "Retrieves the details of a specific order by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/order/{id}/payment": {
      "put": {
        "tags": ["Order"],
        "summary": "Generates a payment for a specific order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the order.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The request body containing payment details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/order/{id}/change-status": {
      "put": {
        "tags": ["Order"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/product/all": {
      "get": {
        "tags": ["Product"],
        "summary": "Retrieves all products available in the catalog.",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/ProductCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Retrieves products based on the provided ID filter.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Optional product ID to filter the results.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Deletes a product by its unique ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the product to delete.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/product": {
      "post": {
        "tags": ["Product"],
        "summary": "Creates a new product in the catalog.",
        "requestBody": {
          "description": "The request body containing product details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": ["Product"],
        "summary": "Updates the information of an existing product.",
        "requestBody": {
          "description": "The request body containing updated product information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChangeStatusRequest": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrderProductRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateOrderRequest": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderProductRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "desc": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "img": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GeneratePaymentRequest": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PaymentType"
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [1, 2, 3, 4, 5],
        "type": "integer",
        "format": "int32"
      },
      "PaymentType": {
        "enum": [1],
        "type": "integer",
        "format": "int32"
      },
      "ProductCategory": {
        "enum": [1, 2, 3, 4],
        "type": "integer",
        "format": "int32"
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "desc": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "img": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    }
  }
}
