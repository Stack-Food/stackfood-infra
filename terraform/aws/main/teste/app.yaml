apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  selector:
    matchLabels:
      app: myapp
  replicas: 1
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - image: ravindrasingh6969/nodeapp:latest
          name: myapp
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: myapp
spec:
  ports:
    - port: 80 #service port  #kubeproxy will open port on worker node to which can route traffic to alb
      targetPort: 8080 #container port
      protocol: TCP
  type: ClusterIP
  selector:
    app: myapp
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myapp
  annotations:
    # Ingress class to use the NGINX Ingress Controller
    # NGINX specific annotations for better API Gateway integration
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    # nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    # Original ALB annotations - mantendo para referÃªncia
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:412061512527:certificate/024830fb-7075-4caf-8e2a-8903e2077634"
    alb.ingress.kubernetes.io/ssl-redirect: "443"
spec:
  ingressClassName: nginx
  rules:
    - host: api.stackfood.com.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80
          - path: /api/v1/
            pathType: Prefix
            backend:
              service:
                name: myapp
                port:
                  number: 80
