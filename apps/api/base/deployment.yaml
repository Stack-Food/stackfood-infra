apiVersion: apps/v1
kind: Deployment
metadata:
  name: stackfood-api
  labels:
    app.kubernetes.io/name: stackfood-api
    app.kubernetes.io/instance: stackfood-api
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: stackfood
    app: stackfood-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: stackfood-api
      app: stackfood-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: stackfood-api
        app.kubernetes.io/instance: stackfood-api
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: stackfood
        app: stackfood-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "5039"
    spec:
      nodeSelector:
        node-role.kubernetes.io/api: "true"
      imagePullSecrets:
        - name: ghcr-secret
      containers:
        - name: api
          image: ghcr.io/stack-food/stackfood-api/api
          imagePullPolicy: Always
          ports:
            - containerPort: 5039
              name: http
            - containerPort: 7189
              name: https
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          envFrom:
            - configMapRef:
                name: stackfood-api-config
            - secretRef:
                name: stackfood-api-secrets
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: stackfood-api-secrets
                  key: POSTGRES_PASSWORD
          # livenessProbe:
          #   httpGet:
          #     path: /swagger/index.html
          #     port: 5039
          #     scheme: HTTP
          #   initialDelaySeconds: 60
          #   periodSeconds: 15
          #   timeoutSeconds: 10
          #   failureThreshold: 5
          # readinessProbe:
          #   httpGet:
          #     path: /swagger/index.html
          #     port: 5039
          #     scheme: HTTP
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   failureThreshold: 3
