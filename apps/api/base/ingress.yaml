# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: stackfood-api-ingress
#   annotations:
#     # NGINX specific annotations
#     nginx.ingress.kubernetes.io/rewrite-target: /$2
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/proxy-body-size: "8m"
#     nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
#     # AWS ALB annotations (se estiver usando o ALB Ingress Controller)
#     alb.ingress.kubernetes.io/scheme: "internet-facing"
#     alb.ingress.kubernetes.io/target-type: "ip"
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: api.stackfood.com.br
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: stackfood-api
#                 port:
#                   number: 5039

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: stackfood-api
  labels:
    app: stackfood-api
  annotations:
    # Configurações para trabalhar com API Gateway
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "20m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    # CORS será gerenciado pelo API Gateway
    nginx.ingress.kubernetes.io/enable-cors: "false"
    # Headers para integração com API Gateway
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: "api.stackfood.com.br"
spec:
  ingressClassName: nginx
  rules:
    - host: api.stackfood.com.br
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: stackfood-api
                port:
                  number: 443
