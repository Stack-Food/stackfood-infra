name: "3. AWS / PROD / Terraform Plan"

on:
  pull_request:
    paths:
      - "terraform/aws/main/**"
      - "terraform/aws/env/prod.tfvars"
  workflow_dispatch:

jobs:
  tflint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    environment:
      name: Production
    defaults:
      run:
        working-directory: ./terraform/aws/

    steps:
      - uses: actions/checkout@v4
        name: Checkout source code

      - uses: actions/cache@v4
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: aws-tflint-${{ hashFiles('.tflint.hcl') }}

      - uses: terraform-linters/setup-tflint@v4
        name: Setup TFLint
        with:
          tflint_version: latest

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Run TFLint
        id: tflint
        run: tflint -f compact

      - run: echo ${{ steps.tflint.outputs.stdout }}
      - run: echo ${{ steps.tflint.outputs.stderr }}
      - run: echo ${{ steps.tflint.outputs.exitcode }}

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment:
      name: Production
    defaults:
      run:
        working-directory: ./terraform/aws/main
    # This condition will prevent the job from running if the PR is in draft status
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialise Terraform
        run: terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_WORKSPACE: "Production"

      - name: Terraform Lint
        run: terraform fmt -check -diff -recursive

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var-file="../env/prod.tfvars" -var 'cloudflare_api_token=${{ secrets.CLOUDFLARE_API_TOKEN }}' -input=false -no-color -out=tfplan \
          && terraform show -no-color tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_WORKSPACE: "Production"

      - name: Reformat Plan
        run: |
          echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
          | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

      - name: Put Plan in Env Var
        run: |
          PLAN=$(cat plan.txt)
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # - name: Post Plan to GitHub PR
      #   uses: mshick/add-pr-comment@v2
      #   with:
      #     allow-repeats: true
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     message: |
      #       ## Terraform Plan Output (Production)
      #       ```diff
      #       ${{ env.PLAN }}
      #       ```
